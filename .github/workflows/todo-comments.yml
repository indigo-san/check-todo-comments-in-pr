name: Check TODO comments in PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  find-todo-comments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Get diff with base branch
        run: |
          git diff origin/${{ github.event.pull_request.base.ref }} --diff-filter=AM -- '*.cs' > diff.txt
          echo "Diff generated:"
          cat diff.txt  # デバッグ: Diffの出力を表示

      - name: Search for TODO comments with multiline and permalink support
        id: search_todo
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const diff = fs.readFileSync('diff.txt', 'utf8');

            const repo = "${{ github.repository }}";
            const sha = "${{ github.sha }}";
            const baseBranch = "${{ github.event.pull_request.base.ref }}";
            const lines = diff.split('\n');

            let result = '';
            let currentFile = '';
            let inMultilineTodo = false;
            let multilineBuffer = '';
            let startLine = 0;
            let lineNumber = 0;

            lines.forEach(line => {
              if (line.startsWith('diff --git a/')) {
                const filePathMatch = line.match(/^diff --git a\/(.*) b\/(.*)$/);
                if (filePathMatch) {
                  currentFile = filePathMatch[2];
                  lineNumber = 0;  // Reset line number for the new file
                }
              } else if (line.startsWith('@@')) {
                // Ignore chunk headers
                return;
              } else {
                lineNumber++;
              }

              // Single line TODO
              if (line.includes('TODO') && !line.includes('/*') && !line.includes('*/')) {
                const permalink = `https://github.com/${repo}/blob/${sha}/${currentFile}#L${lineNumber}`;
                result += `File: ${currentFile}\n${line}\nPermalink: ${permalink}\n\n`;
              }

              // Start of multiline TODO
              if (line.includes('TODO') && line.includes('/*') && !line.includes('*/')) {
                inMultilineTodo = true;
                startLine = lineNumber;
                multilineBuffer = `File: ${currentFile}\n${line}\n`;
              }

              // End of multiline TODO
              if (line.includes('*/') && inMultilineTodo) {
                inMultilineTodo = false;
                const endLine = lineNumber;
                multilineBuffer += `${line}\n`;
                const permalink = `https://github.com/${repo}/blob/${sha}/${currentFile}#L${startLine}-L${endLine}`;
                multilineBuffer += `Permalink: ${permalink}\n\n`;
                result += multilineBuffer;
                multilineBuffer = '';
              }

              // Accumulate lines inside a multiline TODO comment
              if (inMultilineTodo) {
                multilineBuffer += `${line}\n`;
              }
            });

            if (result) {
              fs.writeFileSync('todos_with_files.txt', result);
              return 'true';
            } else {
              return 'false';
            }

      - name: Output TODOs (if any)
        if: steps.search_todo.outputs.todo_found == 'true'
        run: cat todos_with_files.txt

      - name: Comment on PR
        if: steps.search_todo.outputs.todo_found == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const todos = fs.readFileSync('todos_with_files.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The following TODO comments were found:\n\n${todos}`
            })